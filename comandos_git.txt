git init --> inicializar git
gitk ---> abre editor para ver la historia del proyecto.
git config
git config --list
git config --list --show origin --> muestra archivos que guarda la configuracion
git config --list --show-origin
git config --global
git config --global user.name "SC"   -->cambio user
git config --global user.email "jesuscastellanospaez@hotmail.com" -->cambio email en repo local
*******Configuración de Git*******
******Agregar a la zona de preparación staging******
git add Archivo.txt --> agrega los cambios de un archivo especifico a staging
git add .	--> agrega todos los cambio a staging
git add -A
******Agregar a la zona de preparación******
*********Ver estado*********
git status
*********Ver estado*********
*****************Quitar de la zona de preparación staging**************************
git rm --cached archivo.txt -->(Quitar de la zona de preparación).
*****************Quitar de la zona de preparación staging**************************
*****************borra todo, los cambios hasta el archivo*************************
git rm --force archivo.txt
*****************borra todo, los cambios hasta el archivo*************************
**********************Realizar commint**********************
git commit -m "Este es el pimer commit de este archivo" *--añade commit--*
git commit -am "Este es el pimer commit de este archivo" *--agrega a staging y añade commit--*
**********************Realizar commint**********************

*******Ver el historial de cambios del archivo*******
git log
git log Archivo.txt
*******Ver el historial de cambios del archivo*******

************Muestra todos los cambios sobre un archivo*********
git show Archivo.txt -->muestra los cambios hechos por el ultimo commit
************Muestra todos los cambios sobre un archivo*********

**********Comparar versiones**********
git diff commint commint
**********Comparar versiones**********

************************Volver a una versión anterior************************
git reset commit --hard (borramos todos los cambios y lo que tengamos en staging) 
git reset commit --soft (soft conservamos cambios y lo que tengamos en staging) 
git checkout (commit) Archivo.txt
git checkout (rama) Archivo.txt
************************Volver a una versión anterior************************

**************************Ver Cambio en bytes*******************************
git log --stat(Cambio en bytes)
**************************Ver Cambio en bytes*******************************
///////****COMANDOS BRANCH******//////////
git branch branchName --> Crear una rama
git checkout -b nombre_rama --> crea y se mueve dentro de la rama
git checkout branchName --> cambio de rama
git push origin nombre_rama --> envia rama local a repo remoto
git show-branch --> nom muestran las ramas existentes y su historial
git show-branch --all --> nom muestran las ramas existentes y su historial
git branch --> veo las ramas
************************Merge entre branchs************************
git merge (branchName)
**Estar en la rama master o en la que se quiere dejar el <Head>**
************************Merge entre branchs************************

************Traer un repositorio externo************
git remote add origin (url)
git remote (muestra el origen)
git remote -v(es verval)
git pull origin master --allow-unrelated-histories (Fuerza la union de las diferentes historias)
git pull origin master (Descarga cambios)
git push (origin) (master) (Sube Cambios)
************Traer un repositorio externo************
